apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    {{- if and (eq $.Capabilities.KubeVersion.Major "1") (le $.Capabilities.KubeVersion.Minor "14")}}
    nginx.ingress.kubernetes.io/rewrite-target: /
    {{- else}}
    nginx.ingress.kubernetes.io/rewrite-target: /$2
    {{- end}}
  name: &app {{.Chart.Name}}
spec:
  rules:
    - host: dvna.example.com     
      http:
            paths:
          - backend:
              serviceName: *app
              servicePort: 9090
              serviceName: toto  
            {{- if and (eq $.Capabilities.KubeVersion.Major "1") (le $.Capabilities.KubeVersion.Minor "14")}}
            path: /dvna
            {{- else}}
            path: /dvna(/|$)(([a-z])+.)+[A-Z]([a-z])+$
            {{- end}}
---
apiVersion: v1



kind: Service
metadata:
  name: &app {{.Chart.Name}}
spec:
  ports:
    - name: sync
      port: 9090  
      protocol: TCP
      targetPort: 9090
  selector:
    app: *app
  type: ClusterIP  

---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: &app {{.Chart.Name}}
  name: *app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: *app
  template:
    metadata:
      labels:
        app: *app
    spec:
      containers:
        - name: *app
          image: "{{.Values.registry.url}}/{{.Chart.Name}}:{{- if .Values.version -}}{{.Values.version}}{{- else -}}{{.Chart.Version}}{{- end -}}"
          env:
            - name: MYSQL_USER
              value: "{{.Values.dbUser}}"
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef  :
                  name: dvna-mysql-password
                  key: MYSQL_PASSWORD
            - name: MYSQL_DATABASE
              value: "{{.Values.dbBase}}"
            - name: MYSQL_RANDOM_ROOT_PASSWORD
              value: "yes"
          livenessProbe:
            httpGet:



              path: /healthcheck
              port: &port 9090
              scheme: HTTP
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 2
          readinessProbe:
            httpGet:
              path: /healthcheck
              port: *port
              scheme: HTTP   
            failureThreshold: 3
            initialDelaySeconds: 10
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 2
      imagePullSecrets:
        - name: registry
      enableServiceLinks: false

  



